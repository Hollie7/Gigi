{"version":3,"sources":["components/Navbar.js","components/Landing.js","components/Login.js","components/UserFunctions.js","components/Register.js","components/Profile.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","e","preventDefault","localStorage","removeItem","this","props","history","push","loginRegLink","className","to","userLink","href","onClick","logOut","bind","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","usertoken","Component","withRouter","Landing","Login","state","email","password","onChange","onSubmit","setState","target","name","value","user","axios","post","then","res","setItem","data","token","catch","err","console","log","login","error","noValidate","htmlFor","placeholder","Register","username","newUser","register","Profile","decoded","jwt_decode","identify","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.7d2189c8.chunk.js","sourcesContent":["import React, {Component} from 'react'\n\nimport {Link, withRouter} from 'react-router-dom'\n\nclass Navbar extends Component {\n    logOut(e) {\n        e.preventDefault()\n        localStorage.removeItem('usertoken')\n        this.props.history.push('/')\n    }\n\n    render() {\n        const loginRegLink = (\n            <ul className=\"navbar-nav\">\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/login\">Login</Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/register\">Register</Link>\n                </li>\n            </ul>\n        )\n\n        const userLink = (\n            <ul className=\"navbar-nav\">\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/profile\">Profile</Link>\n                </li>\n                <li className=\"nav-item\">\n                    <a href=\"\" onClick={this.logOut.bind(this)} className=\"nav-link\">Logout</a>\n                </li>\n            </ul>\n        )\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark rounded\">\n                <button className=\"navbar-toggler\"\n                    type=\"button\"\n                    data-toggle=\"collapse\"\n                    data-target=\"#navbar1\"\n                    aria-controls=\"navbar1\"\n                    aria-expanded=\"false\"\n                    aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div className=\"collapse navbar-collapse justify-content-md-center\" id=\"navbar1\">\n                        <ul className=\"navbar-nav\">\n                            <li className=\"nav-item\">\n                                <Link to=\"/\" className=\"nav-link\">\n                                    Home\n                                </Link>\n                            </li>\n                        </ul>\n                        {localStorage.usertoken ? userLink : loginRegLink}\n                    </div>\n            </nav>\n        )\n    }\n}\n\nexport default withRouter(Navbar)","import React, {Component} from 'react'\n\nclass Landing extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"jumbotron mt-5\">\n                    <div className=\"col-sm-8 mx-auto\"    >\n                        <h1 className=\"text-center\">Hello!</h1>\n                    </div>\n                </div> \n            </div>\n        )\n    }\n}\nexport default Landing","import React, {Component} from 'react'\nimport {login} from './UserFunctions'\n// import Login from '../pages/login';\n\nclass Login extends Component {\n    constructor() {\n        super();\n        this.state = {\n            email: '',\n            password: ''\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onChange(e) {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const user = {\n            email: this.state.email,\n            password: this.state.password\n        }\n\n        login(user).then(res => {\n            if(!res.error) {\n                this.props.history.push('/profile')\n            }\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-6 mt-5 mx-auto\">\n                        <form noValidate onSubmit={this.onSubmit}>\n                            <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in!</h1>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"email\">Email</label>\n                                <input type=\"email\"\n                                    className=\"form-control\"\n                                    name=\"email\"\n                                    placeholder=\"Enter email\"\n                                    value={this.state.email}\n                                    onChange={this.onChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"password\">Password</label>\n                                <input type=\"password\"\n                                    className=\"form-control\"\n                                    name=\"password\"\n                                    placeholder=\"Enter password\"\n                                    value={this.state.password}\n                                    onChange={this.onChange}\n                                />\n                            </div>\n                            <button type=\"submit\" className=\"btn btn-lg btn-primary btn-block\">\n                                Sign in\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Login","import axios from 'axios'\n\nexport const register = newUser => {\n    return axios\n    .post('users/register', {\n        username: newUser.username,\n        email: newUser.email,\n        password: newUser.password,\n\n    })\n    .then(res => {\n        console.log(res)\n    })\n}\n\nexport const login = user => {\n    return axios\n    .post('users/login', {\n        email: user.email,\n        password: user.password\n    })\n    .then(res => {\n        localStorage.setItem('usertoken', res.data.token)\n        return res.data\n    })\n    .catch(err => {\n        console.log(err)\n    })\n}","import React, {Component} from 'react'\nimport {register} from './UserFunctions'\n\nclass Register extends Component {\n    constructor() {\n        super();\n        this.state = {\n            username: '',\n            email: '',\n            password: ''\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onChange(e) {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const newUser = {\n            username: this.state.username,\n            email: this.state.email,\n            password: this.state.password\n        }\n\n        register(newUser).then(res => {\n            this.props.history.push('/login')\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-6 mt-5 mx-auto\">\n                        <form noValidate onSubmit={this.onSubmit}>\n                            <h1 className=\"h3 mb-3 font-weight-normal\">Register</h1>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"username\">Username</label>\n                                <input type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"username\"\n                                    placeholder=\"Enter Username\"\n                                    value={this.state.username}\n                                    onChange={this.onChange}\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"email\">Email</label>\n                                <input type=\"email\"\n                                    className=\"form-control\"\n                                    name=\"email\"\n                                    placeholder=\"Enter email\"\n                                    value={this.state.email}\n                                    onChange={this.onChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"password\">Password</label>\n                                <input type=\"password\"\n                                    className=\"form-control\"\n                                    name=\"password\"\n                                    placeholder=\"Enter password\"\n                                    value={this.state.password}\n                                    onChange={this.onChange}\n                                />\n                            </div>\n                            <button type=\"submit\" className=\"btn btn-lg btn-primary btn-block\">\n                                Register\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Register","import React, {Component} from 'react'\nimport jwt_decode from 'jwt-decode'\n\nclass Profile extends Component {\n    constructor() {\n        super();\n        this.state = {\n            username: '',\n            email: '',\n        }\n    }\n\n    componentDidMount() {\n        const token = localStorage.usertoken\n        const decoded = jwt_decode(token);\n        this.setState({\n            username: decoded.identify.username,\n            email: decoded.identify.email\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"jumbotron mt-5\">\n                    <div className=\"col-sm-8 mt-5\">\n                        <h1 className=\"text-center\">PROFILE</h1>\n                    </div>\n                    <table className=\"table col-md-6 mx-auto\">\n                        <tbody>\n                            <tr>\n                                <td>Username</td>\n                                <td>{this.state.username}</td>\n                            </tr>\n                            <tr>\n                                <td>email</td>\n                                <td>{this.state.email}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Profile","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\n\nimport Navbar from './components/Navbar'\nimport Landing from './components/Landing'\nimport Login from './components/Login'\nimport Register from './components/Register'\nimport Profile from './components/Profile'\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Navbar />\n          <Route exact path=\"/\" component={Landing}/>\n\n          <div className=\"container\">\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/profile\" component={Profile}/>\n          </div>\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}